<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Monitoring call quality on Amazon Connect on My AWS Workshop</title>
    <link>/en/</link>
    <description>Recent content in Monitoring call quality on Amazon Connect on My AWS Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 16 Apr 2021 11:37:38 -0700</lastBuildDate><atom:link href="/en/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Amazon Elasticsearch</title>
      <link>/en/user-guide/elasticsearch.html</link>
      <pubDate>Fri, 16 Apr 2021 11:37:38 -0700</pubDate>
      
      <guid>/en/user-guide/elasticsearch.html</guid>
      <description>Record the output URLs of the resources are stored in the Simple Server Manager (SSM) Parameter store, go to the region for SSM parameter store where you’ve launched the stack.  Kibana URL (KibanaUrl) where you can open up the dashboard, URL to create a user from the created Amazon Cognito User Pool (UserCreationUrl) Cloudfront URL you must whitelist in the Amazon Connect application whitelisting setting.    Testing the deployment  Make an outbound call from the Cloudfront URL, after 30 seconds you should start to see metrics flowing into Elastic Search/Kibana/Splunk  Amazon Elasticsearch  There are three dashboards that gets deployed   “Business user - queue based dashboard” “Technical user - queue based” “Drill down dashboard”.</description>
    </item>
    
    <item>
      <title>Amazon Elasticsearch</title>
      <link>/en/deployment-guide/elasticsearch.html</link>
      <pubDate>Fri, 16 Apr 2021 11:37:33 -0700</pubDate>
      
      <guid>/en/deployment-guide/elasticsearch.html</guid>
      <description>Deployment Steps with CDK Install and bootstrap AWS CDK Please skip this step if you already have CDK installed and bootstrapped.
npm install -g aws-cdk npm install -g typescript cdk bootstrap aws://YOUR_ACCOUNT_ID/YOUR_AWS_REGION Deploying CDK project  Clone the repository from Github  git clone git@github.com:amazon-connect/amazon-connect-call-quality-monitoring.git
Move into the directory of the stack which will deploy the resources  cd Amazon-connect-monitoring/monitoring-stack-cdk
Set your CCP URL (required) and SAML URL (optional)  export CCP_URL=YOURURL</description>
    </item>
    
    <item>
      <title>Splunk</title>
      <link>/en/deployment-guide/splunk.html</link>
      <pubDate>Fri, 16 Apr 2021 11:37:38 -0700</pubDate>
      
      <guid>/en/deployment-guide/splunk.html</guid>
      <description>Deployment Steps with CDK Install and bootstrap AWS CDK Please skip this step if you already have CDK installed and bootstrapped.
npm install -g aws-cdk npm install -g typescript cdk bootstrap aws://YOUR_ACCOUNT_ID/YOUR_AWS_REGION Deploying CDK project  Clone the repository from Github  git clone git@github.com:amazon-connect/amazon-connect-call-quality-monitoring.git
Move into the directory of the stack which will deploy the resources  cd Amazon-connect-monitoring/monitoring-stack-cdk
Set your CCP URL (required) and SAML URL (optional)  export CCP_URL=YOURURL</description>
    </item>
    
    <item>
      <title>Splunk</title>
      <link>/en/user-guide/splunk.html</link>
      <pubDate>Fri, 16 Apr 2021 11:37:38 -0700</pubDate>
      
      <guid>/en/user-guide/splunk.html</guid>
      <description>Record the output URLs of the resources are stored in the Simple Server Manager (SSM) Parameter store, go to the region for SSM parameter store where you’ve launched the stack.
 Cloudfront URL you must whitelist in the Amazon Connect application whitelisting setting.    Successful deployment of SAR application, confirm both softphonecallreport and softphonestreamstats events are successfully ingested into Splunk HEC input via Kinesis Data Firehose.</description>
    </item>
    
  </channel>
</rss>
